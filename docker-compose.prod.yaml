version: '3.2'
volumes:
  # A named volume to share data between containers
  yelukerest-pg-data:
    # External here indicates that the user must have
    # created this volume independently. It must exist
    # if you want to bring these services that depend
    # on it up. (Postgres in production depends on this
    # volume for persistence. 
    # See https://docs.docker.com/engine/admin/volumes/volumes/
    external: true
services:

  # This is the database to which the all the other components in the stack will connect and interact with
  # (but mostly it's PostgREST that is going to be responsible for the bulk of the db traffic)
  # Having the database in a container is very convinient in development but in production you will
  # use a separate database instance, like Amazon RDS, i.e. in production this section will be
  # commented and in the .env file you will specify the ip of your separate database instance
  db:
    image: postgres:9.6
    ports:
      - "5432:${DB_PORT}"
    environment:
      # env vars specific to postgres image used on first boot
      - POSTGRES_USER=${SUPER_USER}
      - POSTGRES_PASSWORD=${SUPER_USER_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      # env vars useful for our sql scripts
      - SUPER_USER=${SUPER_USER}
      - SUPER_USER_PASSWORD=${SUPER_USER_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DEVELOPMENT=${DEVELOPMENT}
      - JWT_SECRET=${JWT_SECRET}
      - AUTHAPP_DB_PASS=${AUTHAPP_DB_PASS}
      - AUTHAPP_DB_USER=${AUTHAPP_DB_USER}

    volumes:
      - yelukerest-pg-data:/var/lib/postgresql/data

  authapp:
    build: authapp
    working_dir: /app
    ports:
      - "8081:${AUTHAPP_PORT}"
    links:
      - redis:redis
    environment:
      - DB_URI=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - SESSION_SECRET=${AUTHAPP_SESSION_SECRET}
      - DEVELOPMENT=${DEVELOPMENT}
      - CAS_HOST=secure.its.yale.edu
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_NAME=${DB_NAME}
      - DB_USER=${AUTHAPP_DB_USER}
      - DB_PASS=${AUTHAPP_DB_PASS}
      - JWT_SECRET=${JWT_SECRET}

    volumes:
      - "./authapp/src:/app/src"
      - "./authapp/run.sh:/app/run.sh"
    entrypoint: "/app/run.sh"


  backup:
    build: backup
    links:
      - db
    environment:
      - SCHEDULE=${BACKUP_SCHEDULE}
      - S3_REGION=${BACKUP_S3_REGION}
      - S3_ACCESS_KEY_ID=${BACKUP_S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${BACKUP_S3_SECRET_ACCESS_KEY}
      - S3_BUCKET=${BACKUP_S3_BUCKET}
      - S3_PREFIX=${BACKUP_S3_PREFIX}
      - S3_OBJECT_NAME=${BACKUP_S3_OBJECT_NAME}
      - POSTGRES_DATABASE=${DB_NAME}
      - POSTGRES_USER=${SUPER_USER}
      - POSTGRES_PASSWORD=${SUPER_USER_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}