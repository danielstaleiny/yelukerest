include includes/globals/*.conf;
worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include includes/http/*.conf;

    include mime.types;
    # a shorter log format for development
    log_format development '[$time_local] "$request" $status $body_bytes_sent "$request_time ms"';
    
    # For websockets
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # SSL Settings
    ##

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    # Disable weak ciphers
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    # enable session resumption to improve https performance
    # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;


    upstream certbot {
        server certbot;
    }
    # HTTP server
    server {
        listen 80 default_server;
        set_by_lua_block $development  { return os.getenv('DEVELOPMENT') or "0" }
        set_by_lua_block $fqdn  { return os.getenv('FQDN') or "0" }

       location /.well-known {
	   proxy_pass http://certbot;
       }

       location / {
            return 301 https://$host$request_uri;
       }
    }

    # HTTPS server
    server {
        #expose external env vars as internal nginx variables
        listen 443 default_server ssl http2;

        server_name _;
        charset utf-8;
        uninitialized_variable_warn off;

        ssl_certificate /etc/letsencrypt/live/${FQDN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${FQDN}/privkey.pem;
        
        access_log logs/access.log combined;
        location /.well-known {
	   proxy_pass http://certbot;
        }
        
        include includes/http/server/*.conf;
    }

}
